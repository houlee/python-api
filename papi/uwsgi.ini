# uwsgi.ini file
[uwsgi]

# Django-related settings
socket = 127.0.0.1:8000

# the base directory (full path)
chdir = /app/python-api/papi

# Django s wsgi file
module = papi.wsgi

# process-related settings
master = true

# maximum number of worker processes
processes = 5

#maximum number of worker threads
threads = 5
# try to remove all of the generated file/sockets
vacuum = true


daemonize = /app/python-api/papi/log/papi_uwsgi.log
# 使进程在后台运行，并将日志打到指定的日志文件或者udp服务器

log-maxsize = 5000000 #设置最大日志文件大小

disable-logging = true #禁用请求日志记录

listen = 120 #设置socket的监听队列大小（默认：100）

pidfile = /app/python-api/papi/run/uwsgi.pid #指定pid文件

reload-mercy = 8
#设置在平滑的重启（直到接收到的请求处理完才重启）一个工作子进程中，等待这个工作结束的最长秒数。这个配置会使在平滑地重启工作子进程中，如果工作进程结束时间超过了8秒就会被强行结束
（忽略之前已经接收到的请求而直接结束）

max-requests = 5000
#为每个工作进程设置请求数的上限。当一个工作进程处理的请求数达到这个值，那么该工作进程就会被回收重用（重启）。你可以使用这个选项来默默地对抗内存泄漏

#limit-as = 256
#通过使用POSIX/UNIX的setrlimit()函数来限制每个uWSGI进程的虚拟内存使用数。这个配置会限制uWSGI的进程占用虚拟内存不超过256M。如果虚拟内存已经达到256M，并继续申请虚拟内存则会使程序
报内存错误，本次的http请求将返回500错误。

harakiri = 60
#一个请求花费的时间超过了这个harakiri超时时间，那么这个请求都会被丢弃，并且当前处理这个请求的工作进程会被回收再利用（即重启）